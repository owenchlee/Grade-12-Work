#BlueJ class context
comment0.target=SuperDisplayLabel
comment0.text=\r\n\ <p>A\ useful\ label\ to\ display\ game\ score,\ stats,\ or\ other\ texts.</p>\r\n\ \r\n\ <p>This\ is\ effectively\ a\ one-line\ text\ box\ that\ automatically\ fills\ the\ width\ of\ the\ World</p>\r\n\ <p>Height\ can\ be\ specified\ directly,\ but\ otherwise\ is\ calculated\ based\ on\ the\ Font\ Size\ and\ the\ HEIGHT_RATIO\ --\ for\ example\r\n\ \ \ \ 20\ point\ font\ with\ a\ HEIGHT_RATIO\ of\ 2.0\ results\ in\ a\ height\ of\ 2.0\ *\ 20\ \=\ 40\ pixels</p>\r\n\ <h3><b>Version\ 1.2<.b></h3>\r\n\ <ul>\r\n\ \ \ <li>Improved\ API\ -\ more\ update\ methods\ for\ greater\ flexibility</li>\r\n\ \ \ <li>More\ Constructors\ -\ for\ more\ customizability</li>\r\n\ \ \ <li>Auto-width\ -\ now\ fits\ itself\ to\ the\ Width\ of\ the\ World\ (for\ other\ size,\ consider\ SuperTextBox\ instead)</li>\r\n\ \ \ <li>Added\ constants\ for\ DEFAULTS</li>\r\n\ </ul>\r\n\ \ \ \r\n\ \r\n\ @author\ Jordan\ Cohen\r\n\ @since\ November\ 2015\ (formerly\ ScoreBar)\r\n\ @version\ 1.2\ (Jan\ 2023)\r\n
comment1.params=backColor\ foreColor\ font\ height\ text
comment1.target=SuperDisplayLabel(greenfoot.Color,\ greenfoot.Color,\ greenfoot.Font,\ int,\ java.lang.String)
comment1.text=\r\n\ The\ Detailed\ Constructor\r\n\ <p>This\ constructor\ presents\ the\ option\ to\ specifying\ a\ size.\ Ensure\ that\ the\ size\ is\ large\ enough\ to\ fit\r\n\ the\ font\ otherwise\ this\ will\ not\ look\ right</p>\r\n
comment10.params=
comment10.target=void\ update()
comment10.text=\r\n\ If\ you\ used\ this\ Display\ to\ show\ a\ String\ of\ text\ and\ want\ to\ go\ back\ to\ label\:\ value\ style,\ use\ this\ method\r\n
comment11.params=output
comment11.target=void\ update(java.lang.String)
comment11.text=\r\n\ Simplest\ Update\ method\ -\ used\ to\ display\ a\ centered\ String.\r\n\ \r\n\ @param\ output\ \ \ \ The\ String\ to\ be\ displayed\ in\ the\ center\ of\ this\ SuperDisplayLabel.\r\n
comment12.params=output\ recenter
comment12.target=void\ update(java.lang.String,\ boolean)
comment12.text=\r\n\ Takes\ a\ String\ and\ displays\ it\ centered\ to\ the\ screen.\ Note\ this\ gets\ called\ by\ the\ other\r\n\ update()\ method,\ but\ can\ also\ be\ called\ separate\ when\ you\ want\ to\ display\ a\ String\ rather\ \r\n\ than\ a\ bunch\ of\ labels\ and\ values.\ This\ is\ the\ only\ method\ that\ actually\ updates\ the\ Image.\r\n\ \r\n\ @param\ \ \ output\ \ A\ string\ to\ be\ output,\ centered\ on\ the\ screen.\r\n\ @param\ \ \ recenter\ \ \ \ if\ true,\ this\ will\ recalculate\ and\ center\ the\ text.\ Use\ this\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ sparingly,\ as\ the\ recalculation\ is\ fairly\ demanding\ on\ the\ CPU.\r\n
comment13.params=canvas\ text\ middleX\ bottomY
comment13.target=void\ drawCenteredText(greenfoot.GreenfootImage,\ java.lang.String,\ int,\ int)
comment13.text=\r\n\ <h3>Finally,\ draw\ centered\ text\ in\ Greenfoot\!</h3>\r\n\ <p>\r\n\ <b>IMPORTANT\:</b>\ Set\ your\ Font\ in\ your\ GreenfootImage\ before\ you\ send\ it\ here.\r\n\ </p>\r\n\ <p>Use\ this\ instead\ of\ Greenfoot.drawString\ to\ center\ your\ text,\ or\ just\ call\ getStringWidth\r\n\ \ \ \ directly\ and\ draw\ it\ yourself\ if\ you\ prefer\ the\ control\ over\ the\ ease\ of\ use.</p>\r\n\ \r\n\ @param\ canvas\ \ \ \ The\ GreenfootImage\ that\ you\ want\ to\ draw\ onto,\ often\ the\ background\ of\ a\ World,\ but\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ could\ also\ be\ an\ Actor's\ image\ or\ any\ other\ image.\r\n\ @param\ text\ \ \ \ \ \ The\ text\ to\ be\ drawn.\r\n\ @param\ middleX\ \ \ the\ x\ Coordinate\ that\ the\ text\ should\ be\ centered\ on\r\n\ @param\ bottomY\ \ \ the\ y\ Coordinate\ at\ the\ baseline\ of\ the\ text\ (similar\ to\ GreenfootImage.drawString)\r\n\ \r\n\ @since\ June\ 2021\r\n
comment14.params=canvas\ text\ bottomY
comment14.target=void\ drawCenteredText(greenfoot.GreenfootImage,\ java.lang.String,\ int)
comment14.text=\r\n\ <p>\r\n\ <b>IMPORTANT\:</b>\ Set\ your\ Font\ in\ your\ GreenfootImage\ before\ you\ send\ it\ here.\r\n\ </p>\r\n\ <p>Similar\ to\ the\ method\ above,\ except\ it\ always\ centers\ the\ text\ on\ the\ whole\ image\r\n\ \ \ \ instead\ of\ a\ specified\ x\ position.\ UNTESTED\!</p>\r\n\ \r\n\ @param\ canvas\ \ \ \ The\ GreenfootImage\ that\ you\ want\ to\ draw\ onto,\ often\ the\ background\ of\ a\ World,\ but\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ could\ also\ be\ an\ Actor's\ image\ or\ any\ other\ image.\r\n\ @param\ text\ \ \ \ \ \ The\ text\ to\ be\ drawn.\r\n\ @param\ bottomY\ \ \ the\ y\ Coordinate\ at\ the\ baseline\ of\ the\ text\ (similar\ to\ GreenfootImage.drawString)\r\n\ \r\n\ @since\ June\ 2021\r\n
comment15.params=font\ text
comment15.target=int\ getStringWidth(greenfoot.Font,\ java.lang.String)
comment15.text=\r\n\ <h3>Mr.\ Cohen's\ Text\ Centering\ Algorithm</h3>\r\n\ \r\n\ <p>Get\ the\ Width\ of\ a\ String,\ if\ it\ was\ printed\ out\ using\ the\ drawString\ command\ in\ a\ particular\r\n\ Font.</p>\r\n\ <p>There\ is\ a\ performance\ cost\ to\ this,\ although\ it\ is\ more\ significant\ on\ the\ Gallery,\ and\ \r\n\ especially\ on\ the\ Gallery\ when\ browsed\ on\ a\ mobile\ device.\ It\ is\ appropriate\ to\ call\ this\ in\ the\ \r\n\ constructor,\ and\ in\ most\ cases\ it\ is\ ideal\ NOT\ to\ call\ it\ from\ an\ act\ method,\ especially\r\n\ every\ act.</p>\r\n\ \r\n\ <p>In\ cases\ where\ values\ are\ pre-determined,\ it\ may\ be\ ideal\ to\ cache\ the\ values\ (save\ them)\ so\ \r\n\ you\ don't\ have\ to\ run\ this\ repeatedly\ on\ the\ same\ text.\ If\ you\ do\ this\ in\ the\ World\ constructor,\r\n\ there\ is\ no\ performance\ cost\ while\ running.</p>\r\n\ \r\n\ <h3>Performance\ &\ Compatibility\:</h3>\r\n\ <ul>\r\n\ \ <li>\ Locally,\ performance\ should\ be\ sufficient\ on\ any\ moderate\ computer\ (average\ call\ 0.1-0.2ms\ on\ my\ laptop)</li>\r\n\ \ <li>\ To\ be\ compatible\ with\ Greenfoot\ Gallery,\ removed\ use\ of\ getAwtImage()\ and\ replaced\ with\ getColorAt()\ on\ a\ GreenfootImage</li>\r\n\ \ <li>\ On\ Gallery,\ performance\ is\ about\ 10x\ slower\ than\ locally\ (4ms\ on\ Gallery\ via\ Computer).\ For\ reference,\ an\ act()\ should\ be\r\n\ \ \ \ \ \ \ less\ than\ 16.6ms\ to\ maintain\ 60\ frames/acts\ per\ second.\ </li>\r\n\ \ <li>\ HUGE\ performance\ drop\ on\ Gallery\ via\ Mobile\ devices\ -\ not\ sure\ why,\ going\ to\ ignore\ for\ now.\ (Average\ update\ duration\ 34ms,\ more\r\n\ \ \ \ \ \ \ than\ 2\ optimal\ acts)</li>\r\n\ </ul>\r\n\ \r\n\ @param\ font\ the\ GreenFoot.Font\ which\ is\ being\ used\ to\ draw\ text\r\n\ @param\ text\ the\ actual\ text\ to\ be\ drawn\r\n\ @return\ int\ \ the\ width\ of\ the\ String\ text\ as\ draw\ in\ Font\ font,\ in\ pixels.\r\n\ \r\n\ @since\ June\ 2021\r\n\ @version\ December\ 2021\ -\ Even\ more\ Efficiency\ Improvement\ -\ sub\ 0.06ms\ per\ update\ on\ setSpeed(100)\!\r\n
comment2.params=backColor\ foreColor\ font\ height
comment2.target=SuperDisplayLabel(greenfoot.Color,\ greenfoot.Color,\ greenfoot.Font,\ int)
comment2.text=\r\n\ The\ Detailed\ Constructor\r\n\ <p>This\ constructor\ presents\ the\ option\ to\ specifying\ a\ size.\ Ensure\ that\ the\ size\ is\ large\ enough\ to\ fit\r\n\ the\ font\ otherwise\ this\ will\ not\ look\ right</p>\r\n
comment3.params=backColor\ foreColor\ font
comment3.target=SuperDisplayLabel(greenfoot.Color,\ greenfoot.Color,\ greenfoot.Font)
comment3.text=\r\n\ Font\ and\ Colour\ Choice\ Constructor\ \r\n\ <p>Note\ that\ the\ Font\ will\ be\ used\ to\ set\ the\ height\ when\ using\ this\ constructor</p>\r\n\ @param\ backColor\ the\ Background\ Colour\r\n\ @param\ foreColor\ the\ Text\ Colour\r\n\ @param\ font\ \ \ \ \ \ the\ Text\ Font,\ also\ used\ to\ calculate\ Height\r\n
comment4.params=font
comment4.target=SuperDisplayLabel(greenfoot.Font)
comment4.text=\r\n\ Font\ Only\ Constructor.\r\n\ <p>Note\ that\ the\ Font\ will\ be\ used\ to\ set\ the\ height\ when\ using\ this\ constructor</p>\r\n
comment5.params=
comment5.target=SuperDisplayLabel()
comment5.text=\r\n\ Simple\ constructor\ -\ Uses\ default\ fonts\ and\ colours\ and\ auto-height\r\n
comment6.params=labels
comment6.target=void\ setLabels(java.lang.String[])
comment6.text=\r\n\ Set\ labels\ without\ providing\ values.\r\n\ \r\n\ @param\ labels\ \ \ \ a\ set\ of\ Strings\ to\ represent\ the\ stats\ to\ be\ shown\r\n
comment7.params=w
comment7.target=void\ addedToWorld(greenfoot.World)
comment7.text=\r\n\ This\ is\ called\ automatically\ when\ the\ SuperDisplayLabel\ is\ added\ to\ the\ World.\r\n\ \r\n\ Uses\ the\ size\ of\ the\ World\ to\ determine\ the\ width,\ and\ then\ draws\ itself\ and\ placed\ itself\ centered\r\n\ and\ along\ the\ top\ edge.\r\n
comment8.params=labels\ newValues
comment8.target=void\ update(java.lang.String[],\ int[])
comment8.text=\r\n\ Method\ to\ update\ the\ value\ shown\ on\ the\ score\ board.\ The\ size\ of\ both\ arrays\ must\ be\ the\ same.\r\n\ \r\n\ @param\ labels\ \ \ \ an\ array\ of\ Strings\ to\ label\ the\ various\ stats\ to\ be\ shown\r\n\ @param\ newValues\ an\ array\ of\ ints\ to\ show\ as\ values\r\n
comment9.params=newValues
comment9.target=void\ update(int[])
comment9.text=\r\n\ Method\ to\ update\ the\ value\ shown\ on\ the\ TextBox.\ Must\ be\ the\ same\ length\ as\ the\ labels\ array.\r\n\ \r\n\ @param\ newValues\ an\ array\ of\ ints\ that\ is\ the\ same\ length\ as\ the\ labels\ that\ were\ set\r\n
numComments=16
